/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { LootPortal } from "../LootPortal";

export class LootPortal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    lootAddress: string,
    l2TargetAddress: string,
    inboxAddress: string,
    overrides?: Overrides
  ): Promise<LootPortal> {
    return super.deploy(
      lootAddress,
      l2TargetAddress,
      inboxAddress,
      overrides || {}
    ) as Promise<LootPortal>;
  }
  getDeployTransaction(
    lootAddress: string,
    l2TargetAddress: string,
    inboxAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      lootAddress,
      l2TargetAddress,
      inboxAddress,
      overrides || {}
    );
  }
  attach(address: string): LootPortal {
    return super.attach(address) as LootPortal;
  }
  connect(signer: Signer): LootPortal__factory {
    return super.connect(signer) as LootPortal__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LootPortal {
    return new Contract(address, _abi, signerOrProvider) as LootPortal;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lootAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "l2TargetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "inboxAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RetryableTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loot",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootsToTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newL2Target",
        type: "address",
      },
    ],
    name: "setL2Target",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
    ],
    name: "warpLoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161092f38038061092f8339818101604052606081101561003357600080fd5b5080516020820151604090920151909190600061004e6100d8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b0394851617909155600280548216948416949094179093556003805490931691161790556100dc565b3390565b610844806100eb6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063dbe7e3bd11610066578063dbe7e3bd14610122578063e570ca9b14610153578063f2fde38b14610170578063f76f683214610196578063fb0e722b146101bc5761009e565b806352c648ba146100a3578063715018a6146100e45780638da5cb5b146100ee5780639b7b2ab014610112578063c2b530d61461011a575b600080fd5b6100d2600480360360808110156100b957600080fd5b50803590602081013590604081013590606001356101c4565b60408051918252519081900360200190f35b6100ec610519565b005b6100f66105d7565b604080516001600160a01b039092168252519081900360200190f35b6100f66105e6565b6100f66105f5565b61013f6004803603602081101561013857600080fd5b5035610604565b604080519115158252519081900360200190f35b6100d26004803603602081101561016957600080fd5b5035610619565b6100ec6004803603602081101561018657600080fd5b50356001600160a01b031661062b565b6100ec600480360360208110156101ac57600080fd5b50356001600160a01b031661073f565b6100f66107d5565b600254604080516331a9108f60e11b815260048101879052905160009233926001600160a01b0390911691636352211e91602480820192602092909190829003018186803b15801561021557600080fd5b505afa158015610229573d6000803e3d6000fd5b505050506040513d602081101561023f57600080fd5b50516001600160a01b03161461029c576040805162461bcd60e51b815260206004820152601960248201527f53454e4445525f49534e545f4c4f4f545f49445f4f574e455200000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff16156102f2576040805162461bcd60e51b815260206004820152600f60248201526e1053149150511657d0d31052535151608a1b604482015290519081900360640190fd5b606063228f697660e01b338760405160240180836001600160a01b0316815260200182815260200192505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060016004600088815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600360009054906101000a90046001600160a01b03166001600160a01b031663679b6ded600160009054906101000a90046001600160a01b031660008933338b8b8a6040518963ffffffff1660e01b815260040180896001600160a01b03168152602001888152602001878152602001866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561045457818101518382015260200161043c565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509950505050505050505050602060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050506040513d60208110156104d157600080fd5b50516000888152600560205260408082208390555191925082917fde92b5b7839f4a2c640f5e3bbb66d415458dadc57a487b0c7fa562ed7c9c896f9190a29695505050505050565b6105216107e4565b6001600160a01b03166105326105d7565b6001600160a01b03161461058d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546001600160a01b031681565b6001546001600160a01b031681565b60046020526000908152604090205460ff1681565b60056020526000908152604090205481565b6106336107e4565b6001600160a01b03166106446105d7565b6001600160a01b03161461069f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166106e45760405162461bcd60e51b81526004018080602001828103825260268152602001806107e96026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6107476107e4565b6001600160a01b03166107586105d7565b6001600160a01b0316146107b3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212200107f8e02ca83e7d8bb40bb80ef7db6f4b2f7dd39150dab7ced6adcdd464b0e964736f6c634300060c0033";
